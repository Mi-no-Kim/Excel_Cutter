import opening as op;
import TriggerEditor.BGMPlayer4 as BGM;
import MusicSetting as ms;
import System as sys;
import functions as fc;
import L1;
import L2;

const s = StringBuffer(1024);
const s2 = StringBuffer(1024);
const s3 = StringBuffer(1024);
const s4 = StringBuffer(1024);
var MusicStep			= 0;	//게임진행단계 1,오프닝->시작 2,음악세팅 3,음악재생중 4,음악재생종료후2초대기 5,종료세팅후 2로 보내기
var MusicTimer			= 0;
var MusicTemp			= 0;
var MusicDelay			= 0;
var MusicHintOpen1		= 0;
var MusicHintOpen2		= 0;
var MusicHintOpen3		= 0;
var MusicHintOpen4		= 0;
var MusicOpen			= 0;	//1이면 정답공개, 0이면 미공개
var MusicAnswerUser	= 0;	//정답을 맞힌 유저
var MusicRemain		= 0;
var CurrentMusic		= 0;
var EndingDelay			= 0;//MusicSetting의 EndingTimer*36 값 대입.
var VoteAll				= 0;
var MusicNumber2		= 0;//MusicNumber를 대신할 값.
const MusicTextU		= PVariable();
const CleanText			= PVariable();
const UserAnswer		= PVariable();
const VoteUser			= PVariable();
const Ending			= PVariable();
const TextMeassge		= PVariable();
const TextType			= PVariable();
var MusicPlayFront		= 0; //순차재생부분 MusicNumber값에 도달하면 재순환, 재순환시 첫인덱스가 0이면 종료
//const pcolor				= [Db("\x08"), Db("\x0E"), Db("\x0F"), Db("\x10"), Db("\x11"), Db("\x15"), Db("\x16")];

const MusicIndex	= EUDArray(ms.MusicNumber);
const MusicPlay		= EUDArray(ms.MusicNumber);
//원형 배열로 사용, 셔플 후 첫 인덱스부터 진행하며 맞추면 해당인덱스 0대입, 못맞추면 앞칸부터 해당노래인덱스값 대입 후 현재인덱스 0대입.

var Debug_A = 1;
var DBG_N = 0;
const dbgTextU = PVariable();

const returnList = [1, 10, 20];

const myTrack = PVariable();
const mycount = PVariable();
var mycountlimit = 0;

const Lyrics1 = EUDArray(400);
const Lyrics2 = EUDArray(400);
const Timing = EUDArray(400);

const TimeArray = [973, 1947, 2921, 3894, 4868, 5842, 6815, 7789, 8763, 9736, 10710, 11684, 12657, 13631, 14605, 15578, 16552, 17526, 18500, 99999 ];
var mychecknum = 0;
var myroundcount = 0;

const SkipTiming = EUDArray(4);

function shuffle(arr, length) {
	const arr_ = EUDArray.cast(arr);
	var temp;
	var rand;
	for(var i = 0; i < length-1; i++) {
		rand = dwrand() % (length - i) + i;
		temp = arr_[i];
		arr_[i] = arr_[rand];
		arr_[rand] = temp;
	}
}

function musicInit(){
	for(var i=0; i<ms.MusicNumber; i++){
		MusicPlay[i] = i+1;
		MusicIndex[i] = i+1;
	}
	//EndingDelay = ms.EndingTimer*36;
	MusicNumber2 = ms.MusicNumber;
	MusicRemain = 2;//;ms.MusicNumber;
	if(ms.MusicShuffle == 1){shuffle(MusicPlay, MusicNumber2);}
}

function TimeCheck(){
	if(MusicHintOpen1 == 0 && MusicAnswerUser == 0 && MusicTimer <= SkipTiming[0]){
		MusicHintOpen1 = 1; foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1;}
	}
	if(MusicHintOpen2 == 0 && MusicAnswerUser == 0 && MusicTimer <= SkipTiming[1]){
		MusicHintOpen2 = 1; foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1;}
	}
	if(MusicHintOpen3 == 0 && MusicAnswerUser == 0 && MusicTimer <= SkipTiming[2]){
		MusicHintOpen3 = 1; foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1;}
	}
	if(MusicHintOpen4 == 0 && MusicAnswerUser == 0 && MusicTimer <= SkipTiming[3]){
		MusicHintOpen4 = 1; foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1;}
	}
}


function musicDebug();
function DBGControl(cp);

function musicSystem(){
	if(MusicStep == 1){
		MusicDelay += 1;
		if(MusicDelay > 71){
			MusicDelay = 0;
			musicInit(); 
			if (op.debuging == 0) MusicStep = 2;
			else {
				MusicStep = 22;
				foreach(p : EUDLoopPlayer('Human')){dbgTextU[p] = 1;}
			}
		}
	}
	
	if(MusicStep == 2){
		MusicAnswerUser = 0;
		MusicDelay = 0;
		MusicHintOpen1 = 0;
		MusicHintOpen2 = 0;
		MusicHintOpen3 = 0;
		MusicHintOpen4 = 0;
		MusicOpen = 0;
		VoteAll = 0;
		
		MusicTemp = MusicPlay[MusicPlayFront];  //못맞춘 경우에 사용할 변수
		CurrentMusic = MusicTemp;
		MusicTimer = ms.MusicLength[MusicTemp - 1];
		MusicPlay[MusicPlayFront] = 0;
		MusicPlayFront++;
		
		foreach(p : EUDLoopPlayer('Human')){
			myTrack[p] = 0;
			mycount[p] = 0;
		}

		mycountlimit = ms.TimingLength[MusicTemp - 1];
		mychecknum = 0;
		myroundcount = 0;
		
		for (var i_time = 0; i_time < 4; i_time++){
			SkipTiming[i_time] = MusicTimer * ms.MusicTiming[i_time] / 100;
		}
		
		const dummy_arr1 = EUDArray.cast(L1.Lyrics1[MusicTemp-1]);
		const dummy_arr2 = EUDArray.cast(L2.Lyrics2[MusicTemp-1]);
		const dummy_arr3 = EUDArray.cast(ms.Timing[MusicTemp-1]);
		
		for (var i = 0; i < ms.TimingLength[MusicTemp-1]; i++){
			Lyrics1[i] = dummy_arr1[i];
			Lyrics2[i] = dummy_arr2[i];
			Timing[i] = dummy_arr3[i];
		}
		
		MusicStep = 3;
		
		foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1; CleanText[p] = 1; VoteUser[p] = 0; BGM.SuperReset();}
	}
	if(MusicStep == 3){
		if(MusicTimer > 0){
			MusicDelay++;
			if (TimeArray[mychecknum] + myroundcount * 18500 + 2220 <= BGM.mytracknum*2220 + BGM.mysubtracknum || MusicDelay > 35){
				mychecknum += 1;
				MusicTimer -= 1;
				MusicDelay = 0;
				if (mychecknum >= 19){
					mychecknum %= 19;
					myroundcount += 1;
				}
				TimeCheck();
				foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1;}
			}
			foreach(p : EUDLoopPlayer('Human')){
				setcurpl(p);
				if (myTrack[p] < BGM.mytracknum * 2220 + BGM.mysubtracknum){
					myTrack[p] = BGM.mytracknum * 2220 + BGM.mysubtracknum;
				}
				if (mycount[p] < mycountlimit && myTrack[p] >= Timing[mycount[p]]+2220){
					mycount[p] += 1;
					MusicTextU[p] = 1;
				}
			}
		}
		if(MusicTimer == 0){
			CurrentMusic = 0;
			MusicStep = 4;
			MusicDelay = 0;
			if(MusicAnswerUser == 0){
				MusicOpen = 1;
				MusicRemain--;
			}
		}
		const VoteN = sys.UserNumber;
		if(VoteAll >= ms.VoteNum[VoteN-1] || Deaths(fc.superUser, Exactly, 2, ms.KEY)){ //투표
			CurrentMusic = 0;
			MusicDelay = 0;
			MusicStep = 4;
			if(MusicAnswerUser == 0){
				MusicOpen = 1;
				MusicRemain--;
			}
			//tct.printAll("\x1F■ \x04스킵투표로 현재곡을 스킵합니다.");
			if(VoteAll >= ms.VoteNum[VoteN-1]){
				foreach(p : EUDLoopPlayer('Human', None, None)){
					setcurpl(p);
					s2.print("\x1F■ \x04스킵투표로 현재곡을 스킵합니다.");
					MusicTextU[p] = 1;
				}
			}
			else if(Deaths(fc.superUser, Exactly, 2, ms.KEY)){
				foreach(p : EUDLoopPlayer('Human', None, None)){
					setcurpl(p);
					s2.print("\x1F■ \x04방장이 현재곡을 스킵했습니다.");
					MusicTextU[p] = 1;
				}
			}
			SetDeaths(Force1, SetTo, 4, ms.EFFECT);
		}
	}
	if(MusicStep == 4){
		MusicDelay++;
		if(MusicDelay > 71){
			MusicDelay = 0;
			MusicStep = 5;
		}
	}
	if(MusicStep == 5){
		if (op.debuging == 0){
			MusicStep = 2;
			if(MusicRemain > 0){
				if(MusicPlay[MusicPlayFront] == 0){ //순회 전에 값이 0인 경우
					MusicStep = 21;
				}
			}
			else{
				MusicStep = 21;
			}
		}
		else{
			MusicStep = 22;
			foreach(p : EUDLoopPlayer('Human')){dbgTextU[p] = 1; CleanText[p] = 1;}
		}
	}
	if (MusicStep == 21){
		CurrentMusic = ms.EndingMusic;
	
		foreach(p : EUDLoopPlayer('Human')){
			myTrack[p] = 0;
			mycount[p] = 0;
			BGM.SuperReset();
		}
		mycountlimit = ms.TimingLength[ms.EndingMusic - 1];
		mychecknum = 0;
		myroundcount = 0;
		
		const dummy_arr1 = EUDArray.cast(L1.Lyrics1[ms.EndingMusic-1]);
		const dummy_arr2 = EUDArray.cast(L2.Lyrics2[ms.EndingMusic-1]);
		const dummy_arr3 = EUDArray.cast(ms.Timing[ms.EndingMusic-1]);
		
		for (var i = 0; i < ms.TimingLength[ms.EndingMusic-1]; i++){
			Lyrics1[i] = dummy_arr1[i];
			Lyrics2[i] = dummy_arr2[i];
			Timing[i] = dummy_arr3[i];
		}
		
		MusicStep = 20;
	}
}

function checkAnswer01(pp, K){
	if(K == 1999 + MusicTemp || (op.mysetting01 == 0 && K == 2999 + MusicTemp) || (op.mysetting02 == 0 && K == 3999 + MusicTemp)){
		MusicAnswerUser = 1;
		MusicOpen = 1;
		MusicRemain--;
		UserAnswer[pp] += 1;
		foreach(p : EUDLoopPlayer('Human', None, None)){
			setcurpl(p);
			s2.print("\x1F■ ", PColor(pp), PName(pp), "\x04님께서 정답을 맞추셨습니다!");
			MusicTextU[p] = 1;
		}
		setcurpl(pp);
		SetDeaths(Force1, SetTo, 5, ms.EFFECT);
		SetScore(pp, Add, 1, Custom);
		
		return 1;
	}
	return 0;
}


function musicPlay(cp){ //플레이어 텍스트 및 정답관리
	if(MusicStep > 0){
		if(!Deaths(cp, Exactly, CurrentMusic, ms.MUSIC)){
			SetDeaths(cp, SetTo, CurrentMusic, ms.MUSIC);
			BGM.SetBGM(CurrentMusic, 0);
		}
		if(MusicStep < 20){ //엔딩이 아닐 때
			if(MusicTextU[cp] == 1){
				MusicTextU[cp] = 0;
				if(IsUserCP()){
					s.insert(0);
					if(MusicStep <= 4){
						s.append("\x13\x1E남은곡 ( ", MusicRemain, " / ", MusicNumber2, " ) ","\n");
						s.append("\x13\x1F- \x1D", MusicTimer, "초 \x1F-\n");
						if (mycount[cp] > 0){
							s.append("\x04", ptr2s(Lyrics1[mycount[cp]-1]), "\n");
							s.append("\x04", ptr2s(Lyrics2[mycount[cp]-1]), "\n");
						}
						else{
							s.append("\n\n");
						}
						if(MusicHintOpen1 == 1 || MusicOpen == 1){
							s.append("\n\x13\x1B작곡가\x04 : ", ptr2s(ms.MusicHint1[MusicTemp-1]));
						}
						else{
							s.append("\n");
						}
						//s.append("\nmyTrack: ",myTrack, " / BGM.mytracknum: ", BGM.mytracknum, " / BGM.mysubtracknum: ", BGM.mysubtracknum);
						if(MusicOpen == 1){s.append("\n\x13\x1F정답 \x04: ", ptr2s(ms.MusicAnswer[MusicTemp-1]), "");}
						else if(MusicHintOpen4 == 1){s.append("\n\x13\x07초성 \x04: ", ptr2s(ms.MusicHint4[MusicTemp-1]));}
						else if(MusicHintOpen3 == 1){s.append("\n\x13\x07초성 \x04: ", ptr2s(ms.MusicHint3[MusicTemp-1]));}
						else if(MusicHintOpen2 == 1){s.append("\n\x13\x07초성 \x04: ", ptr2s(ms.MusicHint2[MusicTemp-1]));}
					}
				}
			}
			if(IsUserCP()){s.DisplayAt(0);}
			if(op.setting2 == 0){
				const VoteN = sys.UserNumber;
				if(VoteAll == 0){eprintln("\x1D( \x19\"K\"\x04키를 누르면, 곡을 넘깁니다. \x1D)");}
				else{eprintln("\x1D( \x19\"K\"\x04키를 누르면, 곡을 넘깁니다. \x1E투표인원 ", VoteAll, "/", ms.VoteNum[VoteN-1], " \x1D)");}
			}
			else{eprintln("\x1D( \x04스킵이 \x06비활성화\x04되어 있습니다. \x1D)");}
			if(CleanText[cp] == 1){
				CleanText[cp] = 0;
				if(IsUserCP()){s2.printfAt(0, "\n\n\n\n\n\n\n\n");}
			}
			if(MusicStep == 3){
				if(Deaths(cp, Exactly, 1, ms.KEY)){
					if(op.setting2 == 0){
						if(VoteUser[cp] == 0){
							VoteUser[cp] = 1;
							VoteAll += 1;
							s2.print("\x08！\x04스킵에 투표하셨습니다.");
							SetDeaths(cp, SetTo, 2, ms.EFFECT);
						}
					}
				}
				if(Deaths(cp, AtLeast, 1, ms.ANSWER)){ //정답처리
					const key = fc.GetDeath(cp, ms.ANSWER);
					if(key >= 10000 && MusicOpen  == 0){
						for (var i = ms.key10000L[key-10000]; i < ms.key10000L[key-10000+1]; i++){
							const key2 = ms.key10000[i];
							if (checkAnswer01(cp, key2) == 1)
								break;
						}
					}
					if(MusicOpen  == 0)
						const dummy_data = checkAnswer01(cp, key);
				}
			}
		}
		if(MusicStep == 20){
			if (myTrack[cp] < BGM.mytracknum * 2220 + BGM.mysubtracknum){
				myTrack[cp] = BGM.mytracknum * 2220 + BGM.mysubtracknum;
			}
			if (mycount[cp] < mycountlimit && myTrack[cp] >= Timing[mycount[cp]]+2220){
				mycount[cp]++;
				MusicTextU[cp] = 1;
			}
			if(MusicTextU[cp] == 1){
				MusicTextU[cp] = 0;
				s3.insert(0);
				s3.append(ptr2s(ms.EndingText1), "\n");
				s3.append(ptr2s(ms.EndingText2), "\n");
//				if (mycount[cp] > 0){
//					s3.append("\x04", ptr2s(Lyrics1[mycount[cp]-1]), "\n");
//					s3.append("\x04", ptr2s(Lyrics2[mycount[cp]-1]), "\n");
//				}
//				else{
					s3.append("\n\n");
//				}
				s3.append("\n", ptr2s(ms.EndingText3), "\n");
				s3.append(ptr2s(ms.EndingText4));
			}
			s3.DisplayAt(0);
			if(BGM.isstop == 1){Victory();}
			Ending[cp] += 1;
		}
		else if (MusicStep == 22){
			if(dbgTextU[cp] == 1){
				dbgTextU[cp] = 0;
				s4.insert(0);
				s4.append("\x13\x07DEBUG MODE \x02(W A S D로 조작 / Q로 선택)\n");
				s4.append("\x13\x04현재 숫자: \x1F", Debug_A, "          ","\x04증감 숫자: \x18",returnList[DBG_N],"\n");
				if (Debug_A == 0){
					s4.append("\x13\x07엔딩");
				}
				else{
					s4.append("\x13\x07노래: \x1B", ptr2s(ms.MusicAnswer[Debug_A-1]));
				}
			}
			{s4.DisplayAt(0);}
			if(CleanText[cp] == 1){
				CleanText[cp] = 0;
				s2.printfAt(0, "\n\n\n\n\n\n\n\n");
			}
			if(sys.setUser == cp){DBGControl(cp);}
		}
		else{
			if(TextMeassge[cp] < 4320){TextMeassge[cp] += 1;}
			else{
				TextMeassge[cp] = 0;
				if(TextType[cp] == 0){
					TextType[cp] = 1;
					s2.print("\x1F■ \x04방장은 다른 유저를 \x08강퇴\x04할 수 있는 권한을 가지고 있습니다.\n   \x1E\"!강퇴\"+\"플레이어숫자\"를 채팅으로 치면 강퇴됩니다. Ex. !강퇴1");
				}
				else if(TextType[cp] == 1){
					TextType[cp] = 0;
					s2.print("\x1F■ \x04방장은 \x02→키\x04를 눌러서 곡을 \x06강제로 스킵\x04할 수 있습니다.");
				}
			}
		}
	}
}

function musicDebug(){
	MusicAnswerUser = 0;
	MusicDelay = 0;
	MusicHintOpen1 = 0;
	MusicHintOpen2 = 0;
	MusicHintOpen3 = 0;
	MusicHintOpen4 = 0;
	MusicOpen = 0;
	VoteAll = 0;
	
	MusicTemp = (Debug_A == 0)? ms.EndingMusic : Debug_A;
	CurrentMusic = MusicTemp;
	MusicTimer = ms.MusicLength[MusicTemp - 1];
	
	foreach(p : EUDLoopPlayer('Human')){
		myTrack[p] = 0;
		mycount[p] = 0;
	}
	mycountlimit = ms.TimingLength[MusicTemp - 1];
	mychecknum = 0;
	myroundcount = 0;
	
	for (var i_time = 0; i_time < 4; i_time++){
		SkipTiming[i_time] = MusicTimer * ms.MusicTiming[i_time] / 100;
	}
	
	const dummy_arr1 = EUDArray.cast(L1.Lyrics1[MusicTemp-1]);
	const dummy_arr2 = EUDArray.cast(L2.Lyrics2[MusicTemp-1]);
	const dummy_arr3 = EUDArray.cast(ms.Timing[MusicTemp-1]);
	
	for (var i = 0; i < ms.TimingLength[MusicTemp-1]; i++){
		Lyrics1[i] = dummy_arr1[i];
		Lyrics2[i] = dummy_arr2[i];
		Timing[i] = dummy_arr3[i];
	}
	
	MusicRemain++;
	
	MusicStep = 3;
	
	if (Debug_A == 0){
		MusicStep = 21;
		CurrentMusic = ms.EndingMusic;
	}
	foreach(p : EUDLoopPlayer('Human')){MusicTextU[p] = 1; CleanText[p] = 1; VoteUser[p] = 0; BGM.SuperReset();}
}

function DBGControl(cp){
	if(Deaths(cp, Exactly, 1, ms.DEBUG_CONTROL)){ //UP
		const myNum = returnList[DBG_N];
		Debug_A =  (Debug_A + myNum > ms.MusicNumber)? (ms.MusicNumber) : (Debug_A + myNum);
		foreach(p : EUDLoopPlayer('Human')){dbgTextU[p] = 1;}
	}
	if(Deaths(cp, Exactly, 2, ms.DEBUG_CONTROL)){ //DOWN
		const myNum = returnList[DBG_N];
		Debug_A =  (Debug_A <= myNum)? (0) : (Debug_A - myNum);
		foreach(p : EUDLoopPlayer('Human')){dbgTextU[p] = 1;}
	}
	if(Deaths(cp, Exactly, 3, ms.DEBUG_CONTROL)){ //LEFT
		DBG_N = (DBG_N == 0)? (0) : (DBG_N - 1);
		foreach(p : EUDLoopPlayer('Human')){dbgTextU[p] = 1;}
	}
	if(Deaths(cp, Exactly, 4, ms.DEBUG_CONTROL)){ //RIGHT
		DBG_N = (DBG_N == returnList._arrlen - 1)? (returnList._arrlen - 1) : (DBG_N + 1);
		foreach(p : EUDLoopPlayer('Human')){dbgTextU[p] = 1;}
	}
	if(Deaths(cp, Exactly, 99, ms.DEBUG_CONTROL)){ //Select
		musicDebug();
	}
}
